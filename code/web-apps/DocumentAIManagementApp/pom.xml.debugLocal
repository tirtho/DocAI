<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.azure.spring.samples</groupId>
	<artifactId>DocumentAIManagementApp</artifactId>
	<version>2.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>DocumentAIManagementApp</name>
	<description>A Simple Spring Boot application using AngularJS and
		Azure Cosmos DB Spring boot starter</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>
		<java.version>17</java.version>
		<spring-cloud-azure.version>5.9.1</spring-cloud-azure.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>${spring-cloud-azure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.azure</groupId>
				<artifactId>azure-ai-textanalytics</artifactId>
				<version>5.4.2</version>
				<exclusions>
					<exclusion>
						<groupId>com.azure</groupId>
						<artifactId>azure-core</artifactId>
					</exclusion>
				</exclusions>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-active-directory</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/com.microsoft.graph/microsoft-graph -->
		<dependency>
			<groupId>com.microsoft.graph</groupId>
			<artifactId>microsoft-graph</artifactId>
			<version>5.42.0</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-storage-blob</artifactId>
			<version>12.25.1</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-storage-file-datalake</artifactId>
			<version>12.18.1</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-cosmos</artifactId>
			<version>4.53.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.projectreactor/reactor-core -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
			<version>3.6.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<!--version>2.8.5</version> -->
		</dependency>
		<!-- Azure Identity -->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>1.15.4</version>
		</dependency>

		<!-- Azure Core -->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-core</artifactId>
			<version>1.55.3</version>
		</dependency>

		<!-- Azure AI OpenAI with azure-json excluded -->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-ai-openai</artifactId>
			<version>1.0.0-beta.16</version>
			<exclusions>
				<!-- Exclude the azure-json version that comes with azure-core 1.55.3
					 So that azure-ai-openai can use azure-json version 1.1.0 that it depends upon and us implicitly 
					 packaged with azure-ai-openai
				-->
				<exclusion>
					<groupId>com.azure</groupId>
					<artifactId>azure-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Include the version of azure-json that azure-core will need 
			 So that it does not muddy up the exclusion inside azure-ai-openai
		-->
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-json</artifactId>
			<version>1.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-ai-textanalytics</artifactId>
			<version>5.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.14.0</version>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Comment out the configuration below, when NOT debugging
				with Eclipse or any IDE -->
				<configuration>
					<jvmArguments>
						-Xdebug
						-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9090
					</jvmArguments>
				</configuration>
			</plugin>
			<!-- This plugin below is to deploy in Azure Spring Apps -->
			<!--
			<plugin>
			    <groupId>com.microsoft.azure</groupId>
			    <artifactId>azure-spring-apps-maven-plugin</artifactId>
			    <version>1.19.0</version>
			</plugin>
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<skip>true</skip>
					<configLocation>checkstyle.xml</configLocation>
					<suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
					<propertyExpansion>samedir=</propertyExpansion>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<linkXRef>true</linkXRef>
					<failsOnError>false</failsOnError>
					<failOnViolation>false</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.42</version>
					</dependency>
				</dependencies>
			</plugin>
			<!--************************************************* -->
			<!-- Deploy to Java SE in App Service Linux -->
			<!-- Create Azure App Service with Linux and Java 8.x -->
			<!-- Run "mvn package spring-boot:run" to test app    -->
			<!-- running locally in windows/linux. Then run below -->
			<!-- mvn install "-DRESOURCEGROUP_NAME=xxxx"       -->
			<!-- "-DWEBAPP_NAME=yyyy" "-DREGION=zzzz" azure-webapp:deploy -->
			<!--************************************************* -->
			<plugin>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-webapp-maven-plugin</artifactId>
				<version>2.12.0</version>
				<configuration>
					<schemaVersion>v2</schemaVersion>
					<!-- Web App information -->
					<resourceGroup>${RESOURCEGROUP_NAME}</resourceGroup>
					<appName>${WEBAPP_NAME}</appName>
					<region>${REGION}</region>
					<pricingTier>P1V2</pricingTier>
					<!-- Java Runtime Stack for Web App on Linux -->
					<runtime>
						<os>linux</os>
						<javaVersion>Java 17</javaVersion>
						<webContainer>Java SE</webContainer>
					</runtime>
					<deployment>
						<resources>
							<resource>
								<directory>${project.basedir}/target</directory>
								<includes>
									<include>*.jar</include>
								</includes>
							</resource>
						</resources>
					</deployment>
					<!-- These property settings below are needed, 
						 so the deployment to Azure App Service will 
						 push these to the environment variables in the app 
					-->
					<appSettings>
						<!-- Cosmos DB environment variables -->
						<property>
							<name>DOCAI_COSMOSDB_URI</name>
							<value>${env.DOCAI_COSMOSDB_URI}</value>
						</property>
						<property>
							<name>DOCAI_COSMOSDB_API_KEY</name>
							<value>${env.DOCAI_COSMOSDB_API_KEY}</value>
						</property>
						<property>
							<name>DOCAI_COSMOSDB_DATABASE</name>
							<value>${env.DOCAI_COSMOSDB_DATABASE}</value>
						</property>
						<property>
							<name>DOCAI_COSMOSDB_CONTAINER</name>
							<value>${env.DOCAI_COSMOSDB_CONTAINER}</value>
						</property>
						<property>
							<name>DOCAI_COSMOSDB_CONTAINER_DEMOS</name>
							<value>${env.DOCAI_COSMOSDB_CONTAINER_DEMOS}</value>
						</property>
						<!-- End -->

						<!-- Bing environment variables -->
						<property>
							<name>DOCAI_BING_API_KEY</name>
							<value>${env.DOCAI_BING_API_KEY}</value>
						</property>
						<property>
							<name>DOCAI_BING_QUERY_COUNT</name>
							<value>${env.DOCAI_BING_QUERY_COUNT}</value>
						</property>
						<property>
							<name>DOCAI_BING_AI_API_KEY</name>
							<value>${env.DOCAI_BING_AI_API_KEY}</value>
						</property>
						<property>
							<name>DOCAI_BING_AI_API_ENDPOINT</name>
							<value>${env.DOCAI_BING_AI_API_ENDPOINT}</value>
						</property>
						<!-- End -->

						<!-- AOAI environment variables for AOAI models served
						by Azure -->
						<property>
							<name>DOCAI_AOAI_API_ENDPOINT</name>
							<value>${env.DOCAI_AOAI_API_ENDPOINT}</value>
						</property>
						<property>
							<name>DOCAI_AOAI_API_KEY</name>
							<value>${env.DOCAI_AOAI_API_KEY}</value>
						</property>
						<property>
							<name>DOCAI_AOAI_API_VERSION</name>
							<value>${env.DOCAI_AOAI_API_VERSION}</value>
						</property>
						<property>
							<name>DOCAI_AOAI_DEFAULT_ENGINE</name>
							<value>${env.DOCAI_AOAI_DEFAULT_ENGINE}</value>
						</property>
						<!-- End -->
						
						<!-- If you setup Blob Store as anonymous read, you do not need SAS tokens to access -->
						<!-- In that case for security, put all apps including Blob Store inside a VNet with PE -->
						<!--
						<property>
							<name>BLOB_STORE_SAS_TOKEN</name>
							<value>${env.BLOB_STORE_SAS_TOKEN}</value>
						</property>
						-->
						
						<!-- Below Spring settings are needed to authenticate
						users to the web app -->
						<property>
							<name>DOCAI_APP_TENANT_ID</name>
							<value>${env.DOCAI_APP_TENANT_ID}</value>
						</property>
						<property>
							<name>DOCAI_APP_CLIENT_ID</name>
							<value>${env.DOCAI_APP_CLIENT_ID}</value>
						</property>
						<property>
							<name>DOCAI_APP_CLIENT_SECRET</name>
							<value>${env.DOCAI_APP_CLIENT_SECRET}</value>
						</property>
						<property>
							<name>DOCAI_DEMO_USERS</name>
							<value>${env.DOCAI_DEMO_USERS}</value>
						</property>
						<!-- End -->

						<!-- Used to authenticate to tenant, so that emails can
						be sent using Graph API -->
						<property>
							<name>DOCAI_GRAPH_API_TENANT_ID</name>
							<value>${env.DOCAI_GRAPH_API_TENANT_ID}</value>
						</property>
						<property>
							<name>DOCAI_GRAPH_API_CLIENT_ID</name>
							<value>${env.DOCAI_GRAPH_API_CLIENT_ID}</value>
						</property>
						<property>
							<name>DOCAI_GRAPH_API_CLIENT_SECRET</name>
							<value>${env.DOCAI_GRAPH_API_CLIENT_SECRET}</value>
						</property>
						<!-- End -->

						<!-- Sender and receiver email addresses used to
						send/receive emails. -->
						<!-- This is needed only if you are using the dem o
						feature to send the emails from the web app -->
						<property>
							<name>DOCAI_EMAIL_SENDER_ADDRESS</name>
							<value>${env.DOCAI_EMAIL_SENDER_ADDRESS}</value>
						</property>
						<property>
							<name>DOCAI_EMAIL_RECEIVER_ADDRESS</name>
							<value>${env.DOCAI_EMAIL_RECEIVER_ADDRESS}</value>
						</property>
						<property>
							<name>DOCAI_EMAIL_SUBJECT_PREFIX</name>
							<value>${env.DOCAI_EMAIL_SUBJECT_PREFIX}</value>
						</property>
						<!-- End -->

						<!-- Content Understanding variables -->
						<property>
							<name>DOCAI_CU_API_ENDPOINT</name>
							<value>${env.DOCAI_CU_API_ENDPOINT}</value>
						</property>
						<property>
							<name>DOCAI_CU_API_KEY</name>
							<value>${env.DOCAI_CU_API_KEY}</value>
						</property>
						<property>
							<name>DOCAI_CU_API_VERSION</name>
							<value>${env.DOCAI_CU_API_VERSION}</value>
						</property>
						<property>
							<name>DOCAI_CU_VIDEO_ANALYZER_ID</name>
							<value>${env.DOCAI_CU_VIDEO_ANALYZER_ID}</value>
						</property>
						<!-- End -->

						<property>
							<name>JAVA_OPTS</name>
							<value>-Dserver.port=80</value>
						</property>
					</appSettings>
				</configuration>
			</plugin>
			<!--
		    <plugin>
		        <groupId>com.microsoft.azure</groupId>
		        <artifactId>azure-spring-apps-maven-plugin</artifactId>
		        <version>1.19.0</version>
		        <configuration>
		            <subscriptionId>6cbec813-41ab-4929-bc3f-dc836dcb6919</subscriptionId>
		            <resourceGroup>DocAI</resourceGroup>
		            <clusterName>tr-docai-management-app</clusterName>
		            <region>eastus</region>
		            <sku>Standard</sku>
		            <appName>document-ai-management-app</appName>
		            <isPublic>true</isPublic>
		            <deployment>
		                <cpu>1</cpu>
		                <memoryInGB>2</memoryInGB>
		                <instanceCount>1</instanceCount>
		                <runtimeVersion>Java 17</runtimeVersion>
		                <resources>
		                    <resource>
		                        <directory>${project.basedir}/target</directory>
		                        <includes>
		                            <include>*.jar</include>
		                        </includes>
		                    </resource>
		                </resources>
		            </deployment>
		        </configuration>
		    </plugin>
		    -->
		</plugins>
	</build>
</project>